version: '3.8'

# 실행할 서비스(컨테이너)들의 묶음을 정의합니다.
services:
  # 서비스의 이름을 'postgres-db'로 정합니다. (원하는 이름으로 변경 가능)
  postgres-db:
    # 사용할 도커 이미지를 지정합니다. 'postgres' 이미지의 '15' 버전을 사용합니다.
    image: postgres:15

    # 컨테이너의 이름을 지정합니다. (없어도 무방)
    container_name: gyeonggi-partners-db

    # 환경 변수를 설정하는 부분입니다. PostgreSQL 이미지가 이 값을 읽어 DB를 자동 생성합니다.
    environment:
      POSTGRES_DB: gyeonggi_partners_db        # 생성할 데이터베이스 이름
      POSTGRES_USER: postgres   # 생성할 사용자 이름
      POSTGRES_PASSWORD: postgres # 해당 사용자의 비밀번호

    # 포트 포워딩 설정입니다. [내 컴퓨터 포트]:[컨테이너 포트]
    # 내 컴퓨터의 5433 포트로 오는 요청을 컨테이너의 5432 포트로 전달합니다.
    ports:
      - "5433:5432"

    # 데이터 영속성을 위한 설정입니다. DB 데이터를 내 컴퓨터에 저장하여 컨테이너가 삭제돼도 데이터가 보존됩니다.
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

    # 컨테이너가 예기치 않게 종료되면 자동으로 다시 시작하도록 설정합니다.
    restart: always

  # --- 추가된 Redis 서비스 ---
  # 서비스의 이름을 'redis-cache'로 정합니다. (원하는 이름으로 변경 가능)
  redis-cache:
    # 사용할 도커 이미지를 지정합니다. 'redis' 이미지의 '7.4' 버전을 사용합니다.
    image: redis:7.4-alpine

    # 컨테이너의 이름을 지정합니다.
    container_name: gyeonggi-partners-redis

    # 포트 포워딩 설정입니다. Redis의 기본 포트는 6379입니다.
    # 내 컴퓨터의 6379 포트로 오는 요청을 컨테이너의 6379 포트로 전달합니다.
    ports:
      - "6380:6379"

    # Redis 데이터 영속성을 위한 설정입니다. (선택 사항)
    # 캐시 목적으로만 사용한다면 이 부분을 제외해도 됩니다.
    volumes:
      - ./redis-data:/data

    # 컨테이너가 예기치 않게 종료되면 자동으로 다시 시작하도록 설정합니다.
    restart: always